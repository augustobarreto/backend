// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model NivelVaga {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())

  @@map("niveis_vaga")
}

model ProcessoSeletivo {
  id              Int             @id @default(autoincrement())
  titulo          String
  semestre        String
  descricao       String?
  edital_url      String
  etapas          Etapa[]
  inscricoes      Inscricao[]
  tipos_documento TipoDocumento[]
  arquivado       Boolean?        @default(false)
  createdAt       DateTime        @default(now())

  @@map("processos_seletivos")
}

model Etapa {
  id                   Int              @id @default(autoincrement())
  processo_seletivo    ProcessoSeletivo @relation(fields: [processo_seletivo_id], references: [id])
  processo_seletivo_id Int
  name                 String
  data_inicio          DateTime
  data_fim             DateTime
  createdAt            DateTime         @default(now())

  @@map("etapas")
}

enum Role {
  ROOT
  ALUNO
  PROFESSOR
}

model Usuario {
  id        Int        @id @default(autoincrement())
  login     String     @unique
  email     String     @unique
  senha     String
  telefone  String
  professor Professor?
  aluno     Aluno?
  role      Role
  createdAt DateTime   @default(now())

  @@map("usuarios")
}

model ResetSenha {
  id        Int      @id @default(autoincrement())
  email     String
  token     String
  createdAt DateTime @default(now())

  @@map("reset_senha")
}

model Professor {
  id        Int     @id @default(autoincrement())
  professor Usuario @relation(fields: [userId], references: [id])
  userId    Int     @unique
  siape     String  @unique

  Revisoes   Inscricao[] @relation("Revisor")
  Auditorias Inscricao[] @relation("Auditor")

  @@map("professores")
}

model Aluno {
  id              Int         @id @default(autoincrement())
  aluno           Usuario     @relation(fields: [userId], references: [id])
  userId          Int         @unique
  matricula       String      @unique
  inscricoes      Inscricao[]
  semestre_pgcomp Int
  curso           String
  lattes_link     String

  @@map("alunos")
}

model TipoDocumento {
  id                   Int              @id @default(autoincrement())
  nome                 String
  pontuacao            Decimal          @default(0.00)
  processo_seletivo    ProcessoSeletivo @relation(fields: [processo_seletivo_id], references: [id])
  processo_seletivo_id Int

  documentos Documento[]
  createdAt  DateTime    @default(now())

  @@map("tipos_documento")
}

enum StatusInscricao {
  ENVIADA
  A_REVISAR
}

model StatusInscricaoDesc {
  id        StatusInscricao @id
  name      String
  createdAt DateTime        @default(now())

  @@map("statuses_inscricao")
}

model Documento {
  id Int @id @default(autoincrement())

  inscricao    Inscricao @relation(fields: [inscricao_id], references: [id])
  inscricao_id Int

  tipos_documento    TipoDocumento @relation(fields: [tipos_documento_id], references: [id])
  tipos_documento_id Int

  url String

  createdAt DateTime @default(now())

  @@map("documentos")
}

model Inscricao {
  id                   Int              @id @default(autoincrement())
  status               StatusInscricao  @default(ENVIADA)
  processo_seletivo    ProcessoSeletivo @relation(fields: [processo_seletivo_id], references: [id])
  processo_seletivo_id Int

  aluno    Aluno @relation(fields: [aluno_id], references: [id])
  aluno_id Int
  
  url_lattes String?
  url_enade  String?

  documentos Documento[]

  revisor    Professor? @relation("Revisor", fields: [revisor_id], references: [id])
  revisor_id Int?
  auditor    Professor? @relation("Auditor", fields: [auditor_id], references: [id])
  auditor_id Int?

  nota_final    Decimal @default(0.00)
  classificacao Int     @default(0)

  createdAt DateTime @default(now())
  editedAt  DateTime @default(now())

  @@unique([aluno_id, processo_seletivo_id])
  @@map("inscricoes")
}